# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build flutter app

on:
  push:
    branches: [ 
      "flutter/test", 
      "flutter/release", 
      "flutter/test/*", 
      "flutter/release/*",
    ]

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
  PROJECT_NAME: ""
  FLUTTER_PROJECT_LIST: ("curriculum" "currency_conversion" "maio_photos" "playsee_story" "meep_todo")

jobs:
  flutter-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if github.head_ref is in array
        id: build
        run: |
          array=${{ env.FLUTTER_PROJECT_LIST }}
          IN="${{ env.BRANCH_NAME }}"
          IFS='/' read -ra paths <<< "$IN"
          for path in "${paths[@]}"
          do
            echo "path, $path"
            for item in "${array[@]}"; 
            do
              echo "item, $item"
              if [[ "$path" == "$item" ]]; then
                echo "PROJECT_NAME=$item" >> $GITHUB_ENV
                break 2
              fi
            done
          done
          

      - name: Project name
        run: |
          echo "Project name is: ${{ env.PROJECT_NAME }}"

      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '11'
          
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.19.0

      - name: Install dependencies
        run: cd ${{ env.PROJECT_NAME }} && flutter pub get

      - name: Generate files
        run: cd ${{ env.PROJECT_NAME }}  && flutter pub run build_runner build --delete-conflicting-outputs

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: cd ${{ env.PROJECT_NAME }}  && flutter analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: |
          if [ -d "${{ env.PROJECT_NAME }}/test" ]; then
            cd ${{ env.PROJECT_NAME }} && flutter test
          else
            echo "No 'test' directory found. Skipping 'flutter test'"
          fi
      
          if [ -d "${{ env.PROJECT_NAME }}/integration_test" ]; then
            cd ${{ env.PROJECT_NAME }} && flutter test integration_test
          else
            echo "No 'integration_test' directory found. Skipping 'flutter test integration_test'"
          fi
          
      # Build Android app apk
      - name: Build debug apk
        run: |
          cd ${{ env.PROJECT_NAME }} && flutter build apk
    
      - uses: actions/upload-artifact@v4
        with: 
          name: app-release.apk
          path: ${{ env.PROJECT_NAME }}/build/app/outputs/flutter-apk/app-release.apk
        