# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build app

on:
  push:
    branches: [ 
      "test/curriculum", 
      "release/curriculum",
      "test/currency_conversion", 
      "release/currency_conversion",
      "test/maio_photos", 
      "release/maio_photos",
      "test/playsee_story", 
      "release/playsee_story",
    ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set array variable
        run: |
          array=("curriculum" "currency_conversion" "maio_photos" "playsee_story")

      - name: Check if github.head_ref is in array
        id: build
        run: |
          IN="${{ github.head_ref }}"
          IFS='/' read -ra paths <<< "$IN"
          for path in $paths
          do
            echo "path, $path"
            for item in "${array[@]}"; do
              echo "item, $item"
              if [[ "$path" == "$item" ]]; then
                echo "::set-output name=project_name::$item"
                break 2
              fi
            done
          done
          

      - name: Use matched value
        run: |
          project_name=${{ steps.build.outputs.project_name }}
          echo "Project name is: $project_name"
      
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
          
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.19.0

      - name: Install dependencies
        run: cd ${{ steps.build.outputs.project_name }} && flutter pub get

      - name: Generate files
        run: cd ${{ steps.build.outputs.project_name}} && flutter pub run build_runner build --delete-conflicting-outputs

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: cd ${{ steps.build.outputs.project_name}} && flutter analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: cd ${{ steps.build.outputs.project_name }} && flutter test
          
      # Build Android Bundle release file
      - name: Build aab
        run: |
          cd ${{ steps.build.outputs.project_name }} && flutter build apk
    