# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart lint
on: pull_request

env:
  project_name: 
  test: 
  apps: |
    (
      "curriculum", 
      "currency_conversion", 
      "maio_photos", 
      "playsee_story"
    )

jobs:
  affected-apps:
    runs-on: ubuntu-latest
    name: Try to choose a flutter app
    steps:
      - uses: actions/checkout@v3
      - run: |
            project=${{ github.head_ref }}
            array=${{ env.apps }}
            for item in ${array[*]}
            do
              if [[ $project == *"$item"* ]]; then
                echo "project_name=$item" >> $GITHUB_ENV
              fi
            done
            echo "test=${{ github.head_ref }}" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Project name
        run: 
          echo "${{ env.project_name }}"
          echo "${{ env.test }}"
      
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
          
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.19.0

      - name: Install dependencies
        run: cd ${{ env.project_name }} && flutter pub get

      - name: Generate files
        run: cd ${{ env.project_name }} && flutter pub run build_runner build --delete-conflicting-outputs

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: cd ${{ env.project_name }} && flutter analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: cd ${{ env.project_name }} && flutter test
      
      # Build Android Bundle release file
      - name: Build aab
        run: |
          cd ${{ env.project_name }} && flutter build apk
