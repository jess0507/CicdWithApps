# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart lint
on: pull_request

jobs:
  check_head_ref:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set array variable
        run: |
          array=("curriculum" "currency_conversion" "maio_photos" "playsee_story")

      - name: Check if github.head_ref is in array
        id: check_ref
        run: |
          IN="${{ github.head_ref }}"
          paths=$(echo $IN | tr "/")
          for path in $paths
          do
            echo "path, $path"
            for item in "${array[@]}"; do
              echo "item, $item"
              if [[ "${{ github.head_ref }}" == *"$item"* ]]; then
                echo "::set-output name=matched_value::$item"
                break
              fi
            done
          done
          

      - name: Use matched value
        run: |
          matched_value=${{ steps.check_ref.outputs.matched_value }}
          echo "Matched value is: $matched_value"

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Project name
  #       run: 
  #         echo "${{ needs.affected-apps.outputs.app }}"
  #         echo "${{ needs.affected-apps.outputs.test }}"
      
  #     - uses: actions/checkout@v4

  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: '12.x'
          
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: stable
  #         flutter-version: 3.19.0

  #     - name: Install dependencies
  #       run: cd ${{ needs.affected-apps.outputs.app }} && flutter pub get

  #     - name: Generate files
  #       run: cd ${{ needs.affected-apps.outputs.app}} && flutter pub run build_runner build --delete-conflicting-outputs

  #     # Uncomment this step to verify the use of 'dart format' on each commit.
  #     # - name: Verify formatting
  #     #   run: dart format --output=none --set-exit-if-changed .

  #     # Consider passing '--fatal-infos' for slightly stricter analysis.
  #     - name: Analyze project source
  #       run: cd ${{ needs.affected-apps.outputs.app}} && flutter analyze

  #     # Your project will need to have tests in test/ and a dependency on
  #     # package:test for this step to succeed. Note that Flutter projects will
  #     # want to change this to 'flutter test'.
  #     - name: Run tests
  #       run: cd ${{ needs.affected-apps.outputs.app }} && flutter test
      
  #     # Build Android Bundle release file
  #     - name: Build aab
  #       run: |
  #         cd ${{ needs.affected-apps.outputs.app }} && flutter build apk
