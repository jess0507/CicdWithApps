# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart lint
on: pull_request

env:
  project_name: ${{ github.head_ref }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up project name
        id: split_ref
        run: echo "::set-output name=project_name::$(echo ${GITHUB_HEAD_REF#refs/*/})"
        
      - name: Display Project Name
        run: |
          echo "Project Name: $project_name"
          echo "Project Name Before Slash: $project_name"

      - name: Install dependencies
        run: cd ${{ env.project_name }} && flutter pub get  
         
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
          
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.19.0

      - name: Install dependencies
        run: cd ${{ env.project_name }} && flutter pub get

      - name: Generate files
        run: cd ${{ env.project_name }} && flutter pub run build_runner build --delete-conflicting-outputs

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: cd ${{ env.project_name }} && flutter analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: cd ${{ env.project_name }} && flutter test
      
      # Build Android Bundle release file
      - name: Build aab
        run: |
          cd ${{ env.project_name }} && flutter build apk
