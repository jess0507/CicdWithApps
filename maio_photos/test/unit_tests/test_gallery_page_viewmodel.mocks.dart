// Mocks generated by Mockito 5.4.4 from annotations
// in maio_photos/test/unit_tests/test_gallery_page_viewmodel.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;

import 'package:dio/dio.dart' as _i4;
import 'package:hive_flutter/hive_flutter.dart' as _i2;
import 'package:maio_photos/hive/config/box_name.dart' as _i8;
import 'package:maio_photos/hive/repository/photo_hive_local_storage.dart'
    as _i7;
import 'package:maio_photos/model/db/entity/photo.dart' as _i3;
import 'package:maio_photos/model/request/api_request.dart' as _i5;
import 'package:maio_photos/model/request/get_photos_request.dart' as _i11;
import 'package:maio_photos/model/response/http_response.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<E> extends _i1.SmartFake implements _i2.Box<E> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePhoto_1 extends _i1.SmartFake implements _i3.Photo {
  _FakePhoto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRequestOptions_2 extends _i1.SmartFake
    implements _i4.RequestOptions {
  _FakeRequestOptions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiRequest_3 extends _i1.SmartFake implements _i5.ApiRequest {
  _FakeApiRequest_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpResponse_4<T> extends _i1.SmartFake
    implements _i6.HttpResponse<T> {
  _FakeHttpResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PhotoHiveLocalStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotoHiveLocalStorage extends _i1.Mock
    implements _i7.PhotoHiveLocalStorage {
  MockPhotoHiveLocalStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.BoxName get boxName => (super.noSuchMethod(
        Invocation.getter(#boxName),
        returnValue: _i8.BoxName.photos,
      ) as _i8.BoxName);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  _i2.Box<dynamic> get box => (super.noSuchMethod(
        Invocation.getter(#box),
        returnValue: _FakeBox_0<dynamic>(
          this,
          Invocation.getter(#box),
        ),
      ) as _i2.Box<dynamic>);

  @override
  _i10.Future<void> update({
    required int? key,
    required _i3.Photo? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> updateAllWithId({required List<_i3.Photo>? list}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAllWithId,
          [],
          {#list: list},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> updateAll({required Map<int, _i3.Photo>? entries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {#entries: entries},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<_i3.Photo> query({required int? key}) => (super.noSuchMethod(
        Invocation.method(
          #query,
          [],
          {#key: key},
        ),
        returnValue: _i10.Future<_i3.Photo>.value(_FakePhoto_1(
          this,
          Invocation.method(
            #query,
            [],
            {#key: key},
          ),
        )),
      ) as _i10.Future<_i3.Photo>);

  @override
  List<_i3.Photo> queryAll() => (super.noSuchMethod(
        Invocation.method(
          #queryAll,
          [],
        ),
        returnValue: <_i3.Photo>[],
      ) as List<_i3.Photo>);

  @override
  _i10.Future<void> delete({required int? key}) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {#key: key},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Stream<List<_i3.Photo>> watchList() => (super.noSuchMethod(
        Invocation.method(
          #watchList,
          [],
        ),
        returnValue: _i10.Stream<List<_i3.Photo>>.empty(),
      ) as _i10.Stream<List<_i3.Photo>>);
}

/// A class which mocks [GetPhotosRequest].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPhotosRequest extends _i1.Mock implements _i11.GetPhotosRequest {
  MockGetPhotosRequest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
      ) as String);

  @override
  set path(String? _path) => super.noSuchMethod(
        Invocation.setter(
          #path,
          _path,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get method => (super.noSuchMethod(
        Invocation.getter(#method),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#method),
        ),
      ) as String);

  @override
  set method(String? _method) => super.noSuchMethod(
        Invocation.setter(
          #method,
          _method,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set headers(Map<String, dynamic>? _headers) => super.noSuchMethod(
        Invocation.setter(
          #headers,
          _headers,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set parameters(Map<String, dynamic>? _parameters) => super.noSuchMethod(
        Invocation.setter(
          #parameters,
          _parameters,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set data(dynamic _data) => super.noSuchMethod(
        Invocation.setter(
          #data,
          _data,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RequestOptions get requestOptions => (super.noSuchMethod(
        Invocation.getter(#requestOptions),
        returnValue: _FakeRequestOptions_2(
          this,
          Invocation.getter(#requestOptions),
        ),
      ) as _i4.RequestOptions);

  @override
  List<_i3.Photo> deserialize(_i4.Response<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #deserialize,
          [response],
        ),
        returnValue: <_i3.Photo>[],
      ) as List<_i3.Photo>);

  @override
  _i5.ApiRequest toApiRequest() => (super.noSuchMethod(
        Invocation.method(
          #toApiRequest,
          [],
        ),
        returnValue: _FakeApiRequest_3(
          this,
          Invocation.method(
            #toApiRequest,
            [],
          ),
        ),
      ) as _i5.ApiRequest);

  @override
  _i10.Future<_i6.HttpResponse<dynamic>> request() => (super.noSuchMethod(
        Invocation.method(
          #request,
          [],
        ),
        returnValue: _i10.Future<_i6.HttpResponse<dynamic>>.value(
            _FakeHttpResponse_4<dynamic>(
          this,
          Invocation.method(
            #request,
            [],
          ),
        )),
      ) as _i10.Future<_i6.HttpResponse<dynamic>>);
}
